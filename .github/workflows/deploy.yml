name: Deploy Rails App with Nginx
on:
  push:
    branches:
      - master
jobs:
  deploy:
    name: Build and Deploy Rails App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        run: docker buildx create --use

      # Build and push Docker image to Docker Hub
      - name: Build and Push Docker Image
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        run: |
          docker login -u elviajero34 -p $DOCKERHUB_PASSWORD
          docker buildx build --platform linux/arm/v7 \
          --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY \
          --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE \
          --tag elviajero34/stephanieh-portfolio:latest . \
          --push

      # Transfer docker-compose.yml to Raspberry Pi
      - name: Transfer docker-compose.yml to Raspberry Pi
        env:
          RASPBERRY_PI_IP: ${{ secrets.RASPBERRY_PI_IP }}
          RASPBERRY_PI_PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
        run: |
          sshpass -p $RASPBERRY_PI_PASSWORD scp -o StrictHostKeyChecking=no docker-compose.yml pi@$RASPBERRY_PI_IP:/var/www/html/stephaniehportfolio/

      # Transfer nginx.conf to Raspberry Pi
      - name: Transfer nginx.conf to Raspberry Pi
        env:
          RASPBERRY_PI_IP: ${{ secrets.RASPBERRY_PI_IP }}
          RASPBERRY_PI_PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
        run: |
          sshpass -p $RASPBERRY_PI_PASSWORD scp -o StrictHostKeyChecking=no nginx.conf pi@$RASPBERRY_PI_IP:/var/www/html/stephaniehportfolio/

      # Deploy the application on Raspberry Pi
      - name: SSH into Raspberry Pi and deploy
        env:
          RASPBERRY_PI_IP: ${{ secrets.RASPBERRY_PI_IP }}
          RASPBERRY_PI_PASSWORD: ${{ secrets.RASPBERRY_PI_PASSWORD }}
        run: |
          sshpass -p $RASPBERRY_PI_PASSWORD ssh -o StrictHostKeyChecking=no  pi@$RASPBERRY_PI_IP << 'EOF'
            # Pull the latest Docker image from Docker Hub
            docker pull elviajero34/stephanieh-portfolio:latest

            # Clean up old images
            docker image prune -af

            # Navigate to the app directory
            cd /var/www/html/stephaniehportfolio

            # Stop and remove old containers
            docker-compose down --remove-orphans

            # Start the new containers
            docker-compose up -d

            # Create a new database if it doesn't exist
            docker exec stephaniehportfolio-app-1 bundle exec rake db:create RAILS_ENV=production

            # Run database migrations
            docker exec stephaniehportfolio-app-1 bundle exec rake db:migrate RAILS_ENV=production
          EOF
